type Users {
  id: ID!
  firebaseUID: String
  name: String
  intro: String
  profileImageUrl: String
  isAdmin: Int
  createdAt: DateTime
  updatedAt: DateTime
  stances: [Stances]
  opinionComments: [OpinionComments]
}

type Opinions {
  id: Int
  content: String
  createdAt: DateTime
  usersId: Int
  issuesId: Int
  stancesId: Int
  user: Users
}

type OpinionComments {
  id: Int
  content: String
  createdAt: DateTime
  usersId: Int
  opinionsId: Int
  stancesId: Int
  opinionComments: [OpinionComments]
}

type Issues {
  id: Int
  title: String!
  content: String!
  imageUrl: String
  isPublished: Int
  createdAt: DateTime
  updatedAt: DateTime
  # TODO(jurampark): adds user field
  opinions: [Opinions]
  issueHashTags: [IssueHashTags]
  stances: [Stances]
}

type Stances {
  id: Int
  title: String
  orderNum: Int
  issuesId: Int
}

type IssueHashTags {
  issuesId: Int
  hashTagsId: Int
  hashTags: [HashTags]
}

type HashTags {
  id: Int
  content: String
}

type AuthPayload {
  token: String
  user: Users
}

# bulk insert 쿼리의 return 이 count 임
type bulkInsertCount {
  count: Int
}

input IssuesInput {
  title: String!
  content: String!
  option_list_json: String
}

input IssueHashTagInput {
  issue_id: Int
  tag_id: Int
}

input IssueStancesInput {
  title: String
  orderNum: Int
  IssueId: Int
}

type UploadedFileResponse {
  filename: String!
  mimetype: String!
  encoding: String!
  url: String!
}

type Query {
  users: [Users]
  user(id: Int!): Users
  issue(id: Int!): Issues
  issues(id: Int): [Issues]
  opinions(id: Int): [Opinions]
  stances(id: Int): [Stances]
  stancesByIssueId(issuesId: Int): [Stances]
  opinionComments(id: Int): [OpinionComments]
  opinionComment(id: Int!): OpinionComments
  issueHashTags(id: Int): [IssueHashTags]
  hashTags(id: Int): [HashTags]
}

type Mutation {
  createIssue(title: String, content: String, imageUrl: String, option_list_json: String): Issues!
  updateIssue(id: Int!, title: String, content: String, imageUrl: String, option_list_json: String): Issues!
  createTagsByIssue(data: [IssueHashTagInput]): bulkInsertCount
  createStancesByIssue(data: [IssueStancesInput]): bulkInsertCount
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  singleUpload(file: Upload!): UploadedFileResponse!
}


scalar DateTime
